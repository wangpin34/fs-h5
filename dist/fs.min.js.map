{"version":3,"sources":["fs.js"],"names":["_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_Constants","require","_ErrorHandler","_ErrorHandler2","DEFAULT_SIZE","FS","initialized","initializing","fs","this","bytes","arguments","Default","Promise","resolve","reject","navigator","webkitPersistentStorage","requestQuota","grantBytes","msg","on","type","window","TEMPORARY","requestFileSystem","webkitRequestFileSystem","h5fs","path","all","root","getDirectory","dirEntry","exists","code","FileError","NOT_FOUND_ERR","TYPE_MISMATCH","getFile","fileEntry","then","_ref","_ref2","ret1","ret2","Error","folders","split","filter","e","createDir","dir","parent","slice","create","option","recursive","removeRecursively","remove","data","onErr","createWriter","fileWriter","bb","Blob","write","setTimeout","truncate","onwriteend","onerror","seek","file","fr","FileReader","onloadend","result","readAsText","dirReader","createReader","entries","readEntries","results","concat"],"mappings":"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","file":"fs.min.js","sourcesContent":["import { Default, FileError } from './Constants'\r\nimport ErrorHandler from './ErrorHandler'\r\n\r\nconst DEFAULT_SIZE = 10 * 1024 * 1024\r\nlet FS = null\r\nlet initialized = false\r\nlet initializing = false\r\n\t\r\nexport default class fs {\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tstatic isReady() {\r\n\t\treturn initialized\r\n\t}\r\n\r\n\tstatic requestQuota(bytes=Default.DEFAULT_SIZE) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tnavigator.webkitPersistentStorage.requestQuota(bytes, grantBytes => {\r\n\t\t\t\tresolve(grantBytes)\r\n\t\t\t}, err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'request quota')\r\n\t\t\t\treject({err, msg})\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tstatic init(bytes=DEFAULT_SIZE, type = window.TEMPORARY) {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif(initializing) return; //Make sure only one init is executing\r\n\t\t\tinitializing = true;\r\n\t\t\tinitialized = false;\r\n\r\n\t\t\t(window.requestFileSystem || window.webkitRequestFileSystem)(type, bytes, h5fs => {\r\n\t\t\t\tFS = h5fs;\r\n\t\t\t\tinitializing = false;\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tresolve(h5fs)\r\n\t\t\t}, err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'init file system')\r\n\t\t\t\treject({err, msg})\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tstatic existsPath(path = '') {\r\n\r\n\t\treturn Promise.all(\r\n\t\t\t[\r\n\t\t\t\tnew Promise((resolve, reject) => {\r\n\t\t\t\t\tFS.root.getDirectory(path, {}, (dirEntry) => {\r\n\t\t\t\t\t\tresolve({exists:true, dirEntry})\r\n\t\t\t\t\t}, err => {\r\n\t\t\t\t\t\t//Resovle as false if it is not found error or it is not a directory\r\n\t\t\t\t\t\tif(err.code === FileError.NOT_FOUND_ERR || err.code === FileError.TYPE_MISMATCH) {\r\n\t\t\t\t\t\t\tresolve({exists:false})\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlet msg = ErrorHandler.on(err, 'check whether dir ' + path + ' exists')\r\n\t\t\t\t\t\t\tresolve({msg})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tnew Promise((resolve, reject) => {\r\n\t\t\t\t\tFS.root.getFile(path, {}, fileEntry => {\r\n\t\t\t\t\t\tresolve({exists:true, fileEntry})\r\n\t\t\t\t\t}, err => {\r\n\t\t\t\t\t\t//Resovle as false if it is not found error\r\n\t\t\t\t\t\tif(err.code === FileError.NOT_FOUND_ERR || err.code === FileError.TYPE_MISMATCH) {\r\n\t\t\t\t\t\t\tresolve({exists:false})\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlet msg = ErrorHandler.on(err, 'check whether file' + path + ' exists')\r\n\t\t\t\t\t\t\tresolve({msg})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t})\r\n\t\t\t]).then(([ret1, ret2]) => {\r\n\t\t\t\tif( ret1.exists || ret2.exists){\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}else if( ret1.exists === false || ret2.exists === false){\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthrow new Error(ret1.msg + ' ' + ret2.msg)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\tstatic mkdir(path = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet folders = path.split('/').filter(e => {\r\n\t\t\t\treturn e !== '' && e !== '.'\r\n\t\t\t})\r\n\r\n\t\t\tlet createDir = (folders, dir) => {  \r\n\r\n\t\t\t    let parent = dir || FS.root\r\n\r\n\t\t\t\t  // Throw out './' or '/' and move on to prevent something like '/foo/.//bar'.  \r\n\t\t\t\t  if (folders[0] == '.' || folders[0] == '') {  \r\n\t\t\t\t    folders = folders.slice(1)\r\n\t\t\t\t  }\r\n\r\n\t\t\t\t  parent.getDirectory(folders[0], {create: true}, dirEntry=>{  \r\n\t\t\t\t    // Recursively add the new subfolder (if we still have another to create).  \r\n\t\t\t\t    if (folders.length > 1) {  \r\n\t\t\t\t      \tcreateDir(folders.slice(1), dirEntry)  \r\n\t\t\t\t    } else{\r\n\t\t\t    \t\tresolve(dirEntry)\r\n\t\t\t\t    }\r\n\t\t\t\t  }, err => {\r\n\t\t\t\t  \tlet msg = ErrorHandler.on(err, 'create dir ' + path)\r\n\t\t\t\t  \treject({err, msg})\r\n\t\t\t\t  }) \r\n\t\t\t};  \r\n\r\n\t\t\tcreateDir(folders);\t\r\n\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tstatic rmdir (path, option) {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tFS.root.getDirectory(path, {}, dirEntry => {\r\n\t\t\t\tif(option.recursive){\r\n\t\t\t\t\tdirEntry.removeRecursively(() => {\r\n\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t}, err => {\r\n\t\t\t\t  \tlet msg = ErrorHandler.on(err, 'remove dir ' + path)\r\n\t\t\t\t  \treject({err, msg})\r\n\t\t\t\t  })\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdirEntry.remove(() => {\r\n\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t}, err => {\r\n\t\t\t\t  \tlet msg = ErrorHandler.on(err, 'remove dir ' + path)\r\n\t\t\t\t  \treject({err, msg})\r\n\t\t\t\t  })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t\r\n\t}\r\n\r\n\tstatic writeFile(path = '', data = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'write to file ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getFile(path, {create: true}, fileEntry => {\r\n\t\t\t\tfileEntry.createWriter(fileWriter => {\r\n\t\t\t\t\tlet bb = new Blob([data]);\r\n\t\t\t  \t\tfileWriter.write(bb)\r\n\r\n\t\t\t  \t\tfileWriter.length>data.length && setTimeout(() => {\r\n\t\t\t  \t\t\t/*\r\n\t\t\t  \t\t\t * If write data length is less than file length, the content beyond the length should be truncated\r\n\t\t\t\t\t\t */\r\n\t\t\t  \t\t\tfileWriter.truncate(data.length)\r\n\t\t\t  \t\t},10)\r\n\r\n\t\t\t  \t\tfileWriter.onwriteend = () => {\r\n\t\t\t  \t\t\tresolve()\r\n\t\t\t  \t\t}\r\n\r\n\t\t\t  \t\tfileWriter.onerror = onErr\r\n\r\n\t\t\t\t}, onErr)\r\n\t\t\t}, onErr)\r\n\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tstatic appendFile(path = '', data = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'read from file ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getFile(path, {}, fileEntry => {\r\n\t\t\t\tfileEntry.createWriter( fileWriter => {\r\n\t\t\t\t\t//Set write position at EOF\r\n\t\t\t\t\tfileWriter.seek(fileWriter.length)\r\n\t\t\t\t\tlet bb = new Blob([data])\r\n\t\t\t\t\tfileWriter.write(bb)\r\n\r\n\t\t\t\t\tfileWriter.onwriteend = () => {\r\n\t\t\t  \t\t\tresolve()\r\n\t\t\t  \t\t}\r\n\r\n\t\t\t  \t\tfileWriter.onerror = onErr\r\n\r\n\t\t\t\t}, onErr)\r\n\t\t\t}, onErr)\r\n\t\t})\r\n\t}\r\n\r\n\tstatic readFile(path = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'read from file ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getFile(path, {}, fileEntry => {\r\n\t\t\t\tfileEntry.file(file => {\r\n\t\t\t\t\tlet fr = new FileReader()  \r\n\t\t\t       \tfr.onloadend = e => {  \r\n\t\t\t         \tresolve(e.target.result)\r\n\t\t\t       \t}\r\n\t\t\t       \tfr.readAsText(file)\r\n\t\t\t\t}, onErr)\r\n\t\t\t}, onErr)\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tstatic rmFile(path = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'remove file ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getFile(path, {create: false}, fileEntry => {\r\n\t\t\t\tfileEntry.remove(() => {  \r\n\t\t\t      resolve()\r\n\t\t\t    }, onErr)\r\n\t\t\t}, onErr)\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tstatic list(path = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'list entries under ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getDirectory(path, {}, dirEntry => {\r\n\t\t\t\tlet dirReader = dirEntry.createReader()\r\n\t\t\t\tlet entries = []\r\n\r\n\t\t\t\tlet readEntries = () => {\r\n\t\t\t\t\tdirReader.readEntries( results => {\r\n\t\t\t\t\t\tif(!results.length){\r\n\t\t\t\t\t\t\tresolve(entries)\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tentries = entries.concat(results)\r\n\t\t\t\t\t\t\treadEntries()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},onErr)\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\treadEntries()\r\n\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t}\r\n}\r\n"],"sourceRoot":"/source/"}