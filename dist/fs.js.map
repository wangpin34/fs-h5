{"version":3,"sources":["../src/fs.js"],"names":[],"mappings":"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","file":"fs.js","sourcesContent":["import { Default, FileError } from './Constants'\r\nimport ErrorHandler from './ErrorHandler'\r\n\r\nconst DEFAULT_SIZE = 10 * 1024 * 1024\r\nlet FS = null\r\nlet initialized = false\r\nlet initializing = false\r\n\t\r\nexport default class fs {\r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\tstatic isReady() {\r\n\t\treturn initialized\r\n\t}\r\n\r\n\tstatic requestQuota(bytes=Default.DEFAULT_SIZE) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tnavigator.webkitPersistentStorage.requestQuota(bytes, grantBytes => {\r\n\t\t\t\tresolve(grantBytes)\r\n\t\t\t}, err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'request quota')\r\n\t\t\t\treject({err, msg})\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tstatic init(bytes=DEFAULT_SIZE, type = window.TEMPORARY) {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif(initializing) return; //Make sure only one init is executing\r\n\t\t\tinitializing = true;\r\n\t\t\tinitialized = false;\r\n\r\n\t\t\t(window.requestFileSystem || window.webkitRequestFileSystem)(type, bytes, h5fs => {\r\n\t\t\t\tFS = h5fs;\r\n\t\t\t\tinitializing = false;\r\n\t\t\t\tinitialized = true;\r\n\t\t\t\tresolve(h5fs)\r\n\t\t\t}, err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'init file system')\r\n\t\t\t\treject({err, msg})\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tstatic existsPath(path = '') {\r\n\r\n\t\treturn Promise.all(\r\n\t\t\t[\r\n\t\t\t\tnew Promise((resolve, reject) => {\r\n\t\t\t\t\tFS.root.getDirectory(path, {}, (dirEntry) => {\r\n\t\t\t\t\t\tresolve({exists:true, dirEntry})\r\n\t\t\t\t\t}, err => {\r\n\t\t\t\t\t\t//Resovle as false if it is not found error or it is not a directory\r\n\t\t\t\t\t\tif(err.code === FileError.NOT_FOUND_ERR || err.code === FileError.TYPE_MISMATCH) {\r\n\t\t\t\t\t\t\tresolve({exists:false})\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlet msg = ErrorHandler.on(err, 'check whether dir ' + path + ' exists')\r\n\t\t\t\t\t\t\tresolve({msg})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tnew Promise((resolve, reject) => {\r\n\t\t\t\t\tFS.root.getFile(path, {}, fileEntry => {\r\n\t\t\t\t\t\tresolve({exists:true, fileEntry})\r\n\t\t\t\t\t}, err => {\r\n\t\t\t\t\t\t//Resovle as false if it is not found error\r\n\t\t\t\t\t\tif(err.code === FileError.NOT_FOUND_ERR || err.code === FileError.TYPE_MISMATCH) {\r\n\t\t\t\t\t\t\tresolve({exists:false})\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlet msg = ErrorHandler.on(err, 'check whether file' + path + ' exists')\r\n\t\t\t\t\t\t\tresolve({msg})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t})\r\n\t\t\t]).then(([ret1, ret2]) => {\r\n\t\t\t\tif( ret1.exists || ret2.exists){\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}else if( ret1.exists === false || ret2.exists === false){\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthrow new Error(ret1.msg + ' ' + ret2.msg)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\tstatic mkdir(path = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet folders = path.split('/').filter(e => {\r\n\t\t\t\treturn e !== '' && e !== '.'\r\n\t\t\t})\r\n\r\n\t\t\tlet createDir = (folders, dir) => {  \r\n\r\n\t\t\t    let parent = dir || FS.root\r\n\r\n\t\t\t\t  // Throw out './' or '/' and move on to prevent something like '/foo/.//bar'.  \r\n\t\t\t\t  if (folders[0] == '.' || folders[0] == '') {  \r\n\t\t\t\t    folders = folders.slice(1)\r\n\t\t\t\t  }\r\n\r\n\t\t\t\t  parent.getDirectory(folders[0], {create: true}, dirEntry=>{  \r\n\t\t\t\t    // Recursively add the new subfolder (if we still have another to create).  \r\n\t\t\t\t    if (folders.length > 1) {  \r\n\t\t\t\t      \tcreateDir(folders.slice(1), dirEntry)  \r\n\t\t\t\t    } else{\r\n\t\t\t    \t\tresolve(dirEntry)\r\n\t\t\t\t    }\r\n\t\t\t\t  }, err => {\r\n\t\t\t\t  \tlet msg = ErrorHandler.on(err, 'create dir ' + path)\r\n\t\t\t\t  \treject({err, msg})\r\n\t\t\t\t  }) \r\n\t\t\t};  \r\n\r\n\t\t\tcreateDir(folders);\t\r\n\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tstatic rmdir (path, option) {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tFS.root.getDirectory(path, {}, dirEntry => {\r\n\t\t\t\tif(option.recursive){\r\n\t\t\t\t\tdirEntry.removeRecursively(() => {\r\n\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t}, err => {\r\n\t\t\t\t  \tlet msg = ErrorHandler.on(err, 'remove dir ' + path)\r\n\t\t\t\t  \treject({err, msg})\r\n\t\t\t\t  })\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdirEntry.remove(() => {\r\n\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t}, err => {\r\n\t\t\t\t  \tlet msg = ErrorHandler.on(err, 'remove dir ' + path)\r\n\t\t\t\t  \treject({err, msg})\r\n\t\t\t\t  })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t\r\n\t}\r\n\r\n\tstatic writeFile(path = '', data = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'write to file ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getFile(path, {create: true}, fileEntry => {\r\n\t\t\t\tfileEntry.createWriter(fileWriter => {\r\n\t\t\t\t\tlet bb = new Blob([data]);\r\n\t\t\t  \t\tfileWriter.write(bb)\r\n\r\n\t\t\t  \t\tfileWriter.length>data.length && setTimeout(() => {\r\n\t\t\t  \t\t\t/*\r\n\t\t\t  \t\t\t * If write data length is less than file length, the content beyond the length should be truncated\r\n\t\t\t\t\t\t */\r\n\t\t\t  \t\t\tfileWriter.truncate(data.length)\r\n\t\t\t  \t\t},10)\r\n\r\n\t\t\t  \t\tfileWriter.onwriteend = () => {\r\n\t\t\t  \t\t\tresolve()\r\n\t\t\t  \t\t}\r\n\r\n\t\t\t  \t\tfileWriter.onerror = onErr\r\n\r\n\t\t\t\t}, onErr)\r\n\t\t\t}, onErr)\r\n\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tstatic appendFile(path = '', data = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'read from file ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getFile(path, {}, fileEntry => {\r\n\t\t\t\tfileEntry.createWriter( fileWriter => {\r\n\t\t\t\t\t//Set write position at EOF\r\n\t\t\t\t\tfileWriter.seek(fileWriter.length)\r\n\t\t\t\t\tlet bb = new Blob([data])\r\n\t\t\t\t\tfileWriter.write(bb)\r\n\r\n\t\t\t\t\tfileWriter.onwriteend = () => {\r\n\t\t\t  \t\t\tresolve()\r\n\t\t\t  \t\t}\r\n\r\n\t\t\t  \t\tfileWriter.onerror = onErr\r\n\r\n\t\t\t\t}, onErr)\r\n\t\t\t}, onErr)\r\n\t\t})\r\n\t}\r\n\r\n\tstatic readFile(path = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'read from file ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getFile(path, {}, fileEntry => {\r\n\t\t\t\tfileEntry.file(file => {\r\n\t\t\t\t\tlet fr = new FileReader()  \r\n\t\t\t       \tfr.onloadend = e => {  \r\n\t\t\t         \tresolve(e.target.result)\r\n\t\t\t       \t}\r\n\t\t\t       \tfr.readAsText(file)\r\n\t\t\t\t}, onErr)\r\n\t\t\t}, onErr)\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tstatic rmFile(path = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'remove file ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getFile(path, {create: false}, fileEntry => {\r\n\t\t\t\tfileEntry.remove(() => {  \r\n\t\t\t      resolve()\r\n\t\t\t    }, onErr)\r\n\t\t\t}, onErr)\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\tstatic list(path = '') {\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tlet onErr = err => {\r\n\t\t\t\tlet msg = ErrorHandler.on(err, 'list entries under ' + path)\r\n\t\t\t\treject({err, msg})\r\n\t\t\t}\r\n\r\n\t\t\tFS.root.getDirectory(path, {}, dirEntry => {\r\n\t\t\t\tlet dirReader = dirEntry.createReader()\r\n\t\t\t\tlet entries = []\r\n\r\n\t\t\t\tlet readEntries = () => {\r\n\t\t\t\t\tdirReader.readEntries( results => {\r\n\t\t\t\t\t\tif(!results.length){\r\n\t\t\t\t\t\t\tresolve(entries)\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tentries = entries.concat(results)\r\n\t\t\t\t\t\t\treadEntries()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},onErr)\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\treadEntries()\r\n\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t}\r\n}\r\n"]}